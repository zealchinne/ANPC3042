Date:07-11-2022
---------------------
Objective: Strings

In English 26 alphbtes .i.e a to z or A to Z
collection of charcters / alphbets is called  word = string
collection of words is called sentance. 

String is a collection of charcters. (a to z or A to Z) 

In java:
--------
class Sample {
// data members in class (8 ways)
// define logic -- method 
public static void main(String arg[]) {
//to get the acces of this class, we must create an object
}
}

class Test {
	static  int a=100;
	static double d=12.75;
	static char ch='z';
	static String str="Welcome";
	public static void main(String raj[]){
		System.out.println(a);
		System.out.println(d);
		System.out.println(ch);
		System.out.println(str);
	}
}

String is used to storing and manipulating the charcters.                            
String is a java object that is used to store sequence of the charcters.

String object is immutable (unable to change) sequence of the charcters

String buffer object is a mutable(we can change) sequence of the charcters

ex:   ih ----> string
        hi --> String Buffer

Assume that If we want do the project, in that  project 1000 object we need to created
		>900 objects only string related
and remaing 100 non-string related.

String class is created 2 ways

1. By using string literal directly
 
class Test {
	static String str="hello world";// String literal
	public static void main(String raj[]){
		System.out.println(str);
	}
}

class Test {
	public static void main(String raj[]){
		String str="xyz";// by string literal
		char ch='z';
		char[] charr={'a','b','c','d','e'};// collection of elements having the same datatype is called Array.
		System.out.println(ch);//z
		System.out.println(charr);//abcde
		System.out.println(str);//xyz
	}
}

2. By using string constructor 

1. String ()
2. String (String s)
3. String (StringBuffer s)
4. String (StringBuilder sb)
5. String (char[] ch)
6. String (char[] ch, int offset, int count)
7. String (byte[] b)
8. String (byte[] b, int offset, int count)

Constructor is a special method and having same name of the class.

//differentaite the contructors
class Sample{
	Sample() {
	System.out.println("default constructor"); 	}
	
	Sample(int a) {
	System.out.println("Parameterized_Contructor integer"); }
	
	Sample(String s) {
	System.out.println("Parameterized_Contructor string"); }
	
public static void main(String[] args) {
	Sample s1=new Sample();
	Sample s2=new Sample(50);
	Sample s3=new Sample("welcome"); }
}


class StringConstructorDemo { 	
public static void main(String arg[]) { 
	String s1="abc";
	System.out.println(s1);//abc
	
	String s2=" ";
	System.out.println(s2);//empty space
	
	String s3=new String();
	System.out.println(s3);// empty space,
	
	String s4=new String("Hi");
	System.out.println(s4);// hi
	
	String s5=new String(s1);//String copy
	System.out.println(s5);//abc
	
	String s6=s1;//creating another reference variable for 'abc' obj
	System.out.println(s6);
	
	char[] ch={'a','b','c','d','e','f'};
	System.out.println(ch);//abcdef
	
	String s7=new String(ch);
	System.out.println(s7);// abcdef
	
	String s8=new String(ch, 1,3);
	System.out.println(s8);
	
	byte[] b={65,66,97,98};
	System.out.println(b);
	
	String s9=new String(b);
	System.out.println(s9);//ASCII code //ABab
	
	String s10=null;
	System.out.println(s10);
	
	//String s11=new String(null);
	//System.out.println(s11);// C.T. Error

	String s12=new String(s10);
	System.out.println(s12);// JVM throws Null pointer Exception
	}
}

--> Here JVM create new stream object with s object, data and stores its reference s1
	String s=new String("Hi");
	String s1=new String(s);

--> Here new String object  will not be created, String intataited s1 object reference 
String s=new String("hello");
String s=s1; 

//String pooling
class Sample {
	public static void main(String args[]) {
		String s1="a";
		String s2="b";
		String s3="b";
		System.out.println(s1==s2);// false
		System.out.println(s2==s3);// true
		
		String s4=new String("a");
		String s5=new String("b");
		String s6=new String("b");
		System.out.println(s4==s5);// false
		System.out.println(s5==s6);// false
	}
}

class Sample2 {
	public static void main(String args[]) {
		String s1=new String("a");
		String s2=new String("b");
		String s3=new String("A");
		String s4=new String("b");
		System.out.println(s1==s3);// false
		System.out.println(s1==s4);// false
		System.out.println(s2.equals(s4));//True
		System.out.println(s1.equalsIgnoreCase(s3));// True
	}
}

//current string not found it gives -1
class Sample {
	static void printStringCharcters(String s) {
		for(int i=0;i<s.length();i++)
			System.out.print("\t"+s.charAt(i));
		System.out.println();
	}
	public static void main(String args[]) {
		String str="Anudip";
		printStringCharcters(str);
		System.out.println(str.indexOf("d"));//3
		System.out.println(str.lastIndexOf("p"));//5
		System.out.println(str.indexOf("r"));//-1
		}
}

//current string not found it gives -1
class Sample {
	static void printStringCharcters(String s) {
		for(int i=0;i<s.length();i++)
			System.out.print("\t"+s.charAt(i));
		System.out.println();
	}
	public static void main(String args[]) {
		String str="Anudip";
		printStringCharcters(str);
		System.out.println(str.indexOf("d"));//3
		System.out.println(str.charAt(5));//p
		System.out.println(str.lastIndexOf("p"));//-1
		}
}

//print each charcter in the string and Non repeating 
class PrintEachCharNonRepeatedString {
	static void printStringCharcters(String s) {
		for(int i=0;i<s.length();i++)
			System.out.print("\t"+s.charAt(i));
		System.out.println();
	}
	static void printNonRepeatedCharcters(String s) {
		for(char i :s.toCharArray()){
        if ( s.indexOf(i) == s.lastIndexOf(i)) {
            System.out.println("First non-repeating character is: "+i);
            break;
        }
        }
	}
	public static void main(String args[]) {
		String str="malayalam";
		printStringCharcters(str);// each character 
		printNonRepeatedCharcters(str);//y
		System.out.println(str.indexOf("y"));//4
		System.out.println(str.charAt(5));//a
		System.out.println(str.lastIndexOf("a"));//7
		}
}



